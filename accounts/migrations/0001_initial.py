# Generated by Django 2.2.5 on 2019-09-11 15:27

import accounts.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('display_name', models.CharField(max_length=30, verbose_name='name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('icon', models.ImageField(blank=True, upload_to='account')),
                ('gender', models.CharField(blank=True, choices=[('女性', '女性'), ('男性', '男性'), ('秘密', '秘密')], max_length=50)),
                ('birth_year', models.CharField(blank=True, choices=[['2020', '2020'], ['2019', '2019'], ['2018', '2018'], ['2017', '2017'], ['2016', '2016'], ['2015', '2015'], ['2014', '2014'], ['2013', '2013'], ['2012', '2012'], ['2011', '2011'], ['2010', '2010'], ['2009', '2009'], ['2008', '2008'], ['2007', '2007'], ['2006', '2006'], ['2005', '2005'], ['2004', '2004'], ['2003', '2003'], ['2002', '2002'], ['2001', '2001'], ['2000', '2000'], ['1999', '1999'], ['1998', '1998'], ['1997', '1997'], ['1996', '1996'], ['1995', '1995'], ['1994', '1994'], ['1993', '1993'], ['1992', '1992'], ['1991', '1991'], ['1990', '1990'], ['1989', '1989'], ['1988', '1988'], ['1987', '1987'], ['1986', '1986'], ['1985', '1985'], ['1984', '1984'], ['1983', '1983'], ['1982', '1982'], ['1981', '1981'], ['1980', '1980'], ['1979', '1979'], ['1978', '1978'], ['1977', '1977'], ['1976', '1976'], ['1975', '1975'], ['1974', '1974'], ['1973', '1973'], ['1972', '1972'], ['1971', '1971'], ['1970', '1970'], ['1969', '1969'], ['1968', '1968'], ['1967', '1967'], ['1966', '1966'], ['1965', '1965'], ['1964', '1964'], ['1963', '1963'], ['1962', '1962'], ['1961', '1961'], ['1960', '1960'], ['1959', '1959'], ['1958', '1958'], ['1957', '1957'], ['1956', '1956'], ['1955', '1955'], ['1954', '1954'], ['1953', '1953'], ['1952', '1952'], ['1951', '1951'], ['1950', '1950'], ['1949', '1949'], ['1948', '1948'], ['1947', '1947'], ['1946', '1946'], ['1945', '1945'], ['1944', '1944'], ['1943', '1943'], ['1942', '1942'], ['1941', '1941'], ['1940', '1940']], max_length=20)),
                ('birth_month', models.CharField(blank=True, choices=[['1', '1'], ['2', '2'], ['3', '3'], ['4', '4'], ['5', '5'], ['6', '6'], ['7', '7'], ['8', '8'], ['9', '9'], ['10', '10'], ['11', '11'], ['12', '12']], max_length=20)),
                ('location', models.CharField(blank=True, choices=[('北海道', '北海道'), ('東北', '東北'), ('関東', '関東'), ('中部', '中部'), ('近畿', '近畿'), ('中国', '中国'), ('四国', '四国'), ('九州', '九州')], max_length=50)),
                ('favorite_word', models.CharField(blank=True, max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
    ]
